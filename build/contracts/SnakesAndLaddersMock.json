{
  "contractName": "SnakesAndLaddersMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x155dd5ee"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x27e235e3"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5fd8c710"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "play",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x6898f82b"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "randomString",
          "type": "uint256"
        },
        {
          "name": "turn",
          "type": "uint256"
        }
      ],
      "name": "randomDice",
      "outputs": [
        {
          "name": "",
          "type": "int8"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function",
      "signature": "0x9f4aec59"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0xa26759cb"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addBalance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0xb163cc38"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addAndPlay",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0xddd848dc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "turn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "player",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "move",
          "type": "int256"
        }
      ],
      "name": "LogMove",
      "type": "event",
      "signature": "0x328ae74d0ec75f72cd982577fe559f138c5af6cb657e7f72797dc856533afad5"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "balancediff",
          "type": "int256"
        }
      ],
      "name": "LogGame",
      "type": "event",
      "signature": "0xcb89bd3d0a28836c160c46e949d36d2c54627c2f03143564b726fe40475472b1"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogFund",
      "type": "event",
      "signature": "0x527b059b2c1f34c287da42c15a6cb163dc09fd8b048e89a6a92f568c6a808d4a"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogWithdraw",
      "type": "event",
      "signature": "0x4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab708"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogAddBalance",
      "type": "event",
      "signature": "0x80375a06eb2ba0cd76499d617b8cdbca746cd345d62f74447f626e359b213941"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogRemoveBalance",
      "type": "event",
      "signature": "0xf79628edbc100ee4c818afdbe8e79d40d646414b0ac60346142e347144b9caed"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "setNonce",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf360c183"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5ec01e4d"
    }
  ],
  "bytecode": "0x60806040526064600360006101000a81548160ff021916908360000b60ff1602179055506000600455336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600e60026000600460000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550602060026000600860000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550602660026000601460000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550605460026000601c60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550603b60026000602860000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550605360026000603a60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550605d60026000604860000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550600360026000600f60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550600960026000601f60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550601a60026000602c60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550601360026000603e60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550602a60026000604060000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550604660026000604a60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550602160026000605560000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550604760026000605b60000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550604b60026000606060000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550605060026000606260000b815260200190815260200160002060006101000a81548160ff021916908360000b60ff160217905550611522806104676000396000f3fe6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063155dd5ee1461013e57806327e235e3146101795780635ec01e4d146101de5780635fd8c710146102095780636898f82b14610220578063715018a61461025b5780638da5cb5b146102725780638f32d59b146102c95780639f4aec59146102f8578063a26759cb14610357578063b163cc3814610361578063ddd848dc1461036b578063f2fde38b14610399578063f360c183146103ea575b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5573652061646442616c616e636520746f2073656e64206d6f6e65792e00000081525060200191505060405180910390fd5b34801561014a57600080fd5b506101776004803603602081101561016157600080fd5b8101908080359060200190929190505050610425565b005b34801561018557600080fd5b506101c86004803603602081101561019c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b1565b6040518082815260200191505060405180910390f35b3480156101ea57600080fd5b506101f36106c9565b6040518082815260200191505060405180910390f35b34801561021557600080fd5b5061021e6106fd565b005b34801561022c57600080fd5b506102596004803603602081101561024357600080fd5b81019080803590602001909291905050506108b3565b005b34801561026757600080fd5b50610270610e7e565b005b34801561027e57600080fd5b50610287610fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d557600080fd5b506102de610fe2565b604051808215151515815260200191505060405180910390f35b34801561030457600080fd5b5061033b6004803603604081101561031b57600080fd5b810190808035906020019092919080359060200190929190505050611039565b604051808260000b60000b815260200191505060405180910390f35b61035f611074565b005b61036961115d565b005b6103976004803603602081101561038157600080fd5b8101908080359060200190929190505050611217565b005b3480156103a557600080fd5b506103e8600480360360208110156103bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112db565b005b3480156103f657600080fd5b506104236004803603602081101561040d57600080fd5b8101908080359060200190929190505050611363565b005b61042d610fe2565b15156104a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5468657265206973206e6f2062616c616e636520746f2077697468647261770081525060200191505060405180910390fd5b803073ffffffffffffffffffffffffffffffffffffffff1631101515156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f5468657265206973206e6f7420656e6f7567682062616c616e636520746f207781526020017f697468647261770000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b7ff79628edbc100ee4c818afdbe8e79d40d646414b0ac60346142e347144b9caed333073ffffffffffffffffffffffffffffffffffffffff1631604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106ad573d6000803e3d6000fd5b5050565b60016020528060005260406000206000915090505481565b6000600454604051602001808281526020019150506040516020818303038152906040528051906020012060019004905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115156107b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5468657265206973206e6f2062616c616e636520746f2077697468647261770081525060200191505060405180910390fd5b7f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7083382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108af573d6000803e3d6000fd5b5050565b60008111151561092b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f75206d7573742073656e6420736f6d657468696e6720746f20626574000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156109e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f596f7520646f6e2774206861766520656e6f7567682062616c616e636500000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631600a8202101515610a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001807f596f752063616e6e6f7420626574206d6f7265207468616e20312f3130206f6681526020017f207468697320636f6e74726163742062616c616e63650000000000000000000081525060400191505060405180910390fd5b6000610aa36106c9565b905060008090506000809050600080905060008090506000610ac68660ff611039565b905060018160000b1480610add575060028160000b145b15610ae757600193505b5b600360009054906101000a900460000b60000b8360000b14158015610b225750600360009054906101000a900460000b60000b8260000b14155b15610cc5576000610b338787611039565b90508415610bb85780840193506000600260008660000b60000b815260200190815260200160002060009054906101000a900460000b60000b141515610b9d57600260008560000b60000b815260200190815260200160002060009054906101000a900460000b93505b60648460000b1315610bb3576064840360640393505b610c31565b80830192506000600260008560000b60000b815260200190815260200160002060009054906101000a900460000b60000b141515610c1a57600260008460000b60000b815260200190815260200160002060009054906101000a900460000b92505b60648360000b1315610c30576064830360640392505b5b7f328ae74d0ec75f72cd982577fe559f138c5af6cb657e7f72797dc856533afad533878784604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001831515151581526020018260000b815260200194505050505060405180910390a184159450858060010196505050610ae8565b600360009054906101000a900460000b60000b8360000b1415610dac5786600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fcb89bd3d0a28836c160c46e949d36d2c54627c2f03143564b726fe40475472b133600189604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a1610e75565b86600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fcb89bd3d0a28836c160c46e949d36d2c54627c2f03143564b726fe40475472b133600089600003604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a15b50505050505050565b610e86610fe2565b1515610efa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006101008281151561104857fe5b069150600160068360020a8581151561105d57fe5b0460ff1681151561106a57fe5b0601905092915050565b61107c610fe2565b15156110f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f80375a06eb2ba0cd76499d617b8cdbca746cd345d62f74447f626e359b2139413334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1565b7f527b059b2c1f34c287da42c15a6cb163dc09fd8b048e89a6a92f568c6a808d4a3334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b7f527b059b2c1f34c287da42c15a6cb163dc09fd8b048e89a6a92f568c6a808d4a3334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506112d8816108b3565b50565b6112e3610fe2565b1515611357576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113608161136d565b50565b8060048190555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820df228ea7f828b791b0943e6cc90bba2e8b55577f1548741dabac306a4ad436e70029",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063155dd5ee1461013e57806327e235e3146101795780635ec01e4d146101de5780635fd8c710146102095780636898f82b14610220578063715018a61461025b5780638da5cb5b146102725780638f32d59b146102c95780639f4aec59146102f8578063a26759cb14610357578063b163cc3814610361578063ddd848dc1461036b578063f2fde38b14610399578063f360c183146103ea575b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5573652061646442616c616e636520746f2073656e64206d6f6e65792e00000081525060200191505060405180910390fd5b34801561014a57600080fd5b506101776004803603602081101561016157600080fd5b8101908080359060200190929190505050610425565b005b34801561018557600080fd5b506101c86004803603602081101561019c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b1565b6040518082815260200191505060405180910390f35b3480156101ea57600080fd5b506101f36106c9565b6040518082815260200191505060405180910390f35b34801561021557600080fd5b5061021e6106fd565b005b34801561022c57600080fd5b506102596004803603602081101561024357600080fd5b81019080803590602001909291905050506108b3565b005b34801561026757600080fd5b50610270610e7e565b005b34801561027e57600080fd5b50610287610fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d557600080fd5b506102de610fe2565b604051808215151515815260200191505060405180910390f35b34801561030457600080fd5b5061033b6004803603604081101561031b57600080fd5b810190808035906020019092919080359060200190929190505050611039565b604051808260000b60000b815260200191505060405180910390f35b61035f611074565b005b61036961115d565b005b6103976004803603602081101561038157600080fd5b8101908080359060200190929190505050611217565b005b3480156103a557600080fd5b506103e8600480360360208110156103bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112db565b005b3480156103f657600080fd5b506104236004803603602081101561040d57600080fd5b8101908080359060200190929190505050611363565b005b61042d610fe2565b15156104a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5468657265206973206e6f2062616c616e636520746f2077697468647261770081525060200191505060405180910390fd5b803073ffffffffffffffffffffffffffffffffffffffff1631101515156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f5468657265206973206e6f7420656e6f7567682062616c616e636520746f207781526020017f697468647261770000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b7ff79628edbc100ee4c818afdbe8e79d40d646414b0ac60346142e347144b9caed333073ffffffffffffffffffffffffffffffffffffffff1631604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106ad573d6000803e3d6000fd5b5050565b60016020528060005260406000206000915090505481565b6000600454604051602001808281526020019150506040516020818303038152906040528051906020012060019004905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115156107b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5468657265206973206e6f2062616c616e636520746f2077697468647261770081525060200191505060405180910390fd5b7f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7083382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108af573d6000803e3d6000fd5b5050565b60008111151561092b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f75206d7573742073656e6420736f6d657468696e6720746f20626574000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156109e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f596f7520646f6e2774206861766520656e6f7567682062616c616e636500000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1631600a8202101515610a99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001807f596f752063616e6e6f7420626574206d6f7265207468616e20312f3130206f6681526020017f207468697320636f6e74726163742062616c616e63650000000000000000000081525060400191505060405180910390fd5b6000610aa36106c9565b905060008090506000809050600080905060008090506000610ac68660ff611039565b905060018160000b1480610add575060028160000b145b15610ae757600193505b5b600360009054906101000a900460000b60000b8360000b14158015610b225750600360009054906101000a900460000b60000b8260000b14155b15610cc5576000610b338787611039565b90508415610bb85780840193506000600260008660000b60000b815260200190815260200160002060009054906101000a900460000b60000b141515610b9d57600260008560000b60000b815260200190815260200160002060009054906101000a900460000b93505b60648460000b1315610bb3576064840360640393505b610c31565b80830192506000600260008560000b60000b815260200190815260200160002060009054906101000a900460000b60000b141515610c1a57600260008460000b60000b815260200190815260200160002060009054906101000a900460000b92505b60648360000b1315610c30576064830360640392505b5b7f328ae74d0ec75f72cd982577fe559f138c5af6cb657e7f72797dc856533afad533878784604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001831515151581526020018260000b815260200194505050505060405180910390a184159450858060010196505050610ae8565b600360009054906101000a900460000b60000b8360000b1415610dac5786600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fcb89bd3d0a28836c160c46e949d36d2c54627c2f03143564b726fe40475472b133600189604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a1610e75565b86600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507fcb89bd3d0a28836c160c46e949d36d2c54627c2f03143564b726fe40475472b133600089600003604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a15b50505050505050565b610e86610fe2565b1515610efa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006101008281151561104857fe5b069150600160068360020a8581151561105d57fe5b0460ff1681151561106a57fe5b0601905092915050565b61107c610fe2565b15156110f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f80375a06eb2ba0cd76499d617b8cdbca746cd345d62f74447f626e359b2139413334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1565b7f527b059b2c1f34c287da42c15a6cb163dc09fd8b048e89a6a92f568c6a808d4a3334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b7f527b059b2c1f34c287da42c15a6cb163dc09fd8b048e89a6a92f568c6a808d4a3334604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a134600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506112d8816108b3565b50565b6112e3610fe2565b1515611357576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113608161136d565b50565b8060048190555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820df228ea7f828b791b0943e6cc90bba2e8b55577f1548741dabac306a4ad436e70029",
  "sourceMap": "183:311:2:-;;;905:3:1;884:24;;;;;;;;;;;;;;;;;;;;;;252:1:2;239:14;;666:10:4;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;995:2:1;976:13;:16;990:1;976:16;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;1026:2;1007:13;:16;1021:1;1007:16;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;1058:2;1038:13;:17;1052:2;1038:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1090:2;1070:13;:17;1084:2;1070:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1122:2;1102:13;:17;1116:2;1102:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1154:2;1134:13;:17;1148:2;1134:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1186:2;1166:13;:17;1180:2;1166:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1236:1;1216:13;:17;1230:2;1216:17;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;1267:1;1247:13;:17;1261:2;1247:17;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;1298:2;1278:13;:17;1292:2;1278:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1330:2;1310:13;:17;1324:2;1310:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1362:2;1342:13;:17;1356:2;1342:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1394:2;1374:13;:17;1388:2;1374:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1426:2;1406:13;:17;1420:2;1406:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1458:2;1438:13;:17;1452:2;1438:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1490:2;1470:13;:17;1484:2;1470:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;1522:2;1502:13;:17;1516:2;1502:17;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;183:311:2;;;;;;",
  "deployedSourceMap": "183:311:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1643:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5071:335;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5071:335:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5071:335:1;;;;;;;;;;;;;;;;;;;;272:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:40:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;272:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:114:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;378:114:2;;;;;;;;;;;;;;;;;;;;;;;4545:282:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4545:282:1;;;;;;1957:1866;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1957:1866:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1957:1866:1;;;;;;;;;;;;;;;;;;;;1599:137:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:4;;;;;;814:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;3918:164:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3918:164:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3918:164:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4895:103;;;;;;4363:132;;;;;;1748:165;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1748:165:1;;;;;;;;;;;;;;;;;;;;1885:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:4;;;;;;;;;;;;;;;;;;;;;;260:59:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;260:59:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;260:59:2;;;;;;;;;;;;;;;;;;;;5071:335:1;1018:9:4;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5166:1:1;5150:4;5142:21;;;:25;5134:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5246:6;5229:4;5221:21;;;:31;;5213:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5311:51;5328:10;5348:4;5340:21;;;5311:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;5372:10;:19;;:27;5392:6;5372:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5372:27:1;5071:335;:::o;272:40::-;;;;;;;;;;;;;;;;;:::o;378:114:2:-;416:7;477:5;;460:23;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;460:23:2;;;450:34;;;;;;442:43;;;435:50;;378:114;:::o;4545:282:1:-;4589:15;4607:8;:20;4616:10;4607:20;;;;;;;;;;;;;;;;4589:38;;4658:1;4645:10;:14;4637:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4710:35;4722:10;4734;4710:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;4778:1;4755:8;:20;4764:10;4755:20;;;;;;;;;;;;;;;:24;;;;4789:10;:19;;:31;4809:10;4789:31;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4789:31:1;4545:282;:::o;1957:1866::-;2018:1;2009:6;:10;2001:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:8;:20;2091:10;2082:20;;;;;;;;;;;;;;;;2072:6;:30;;2064:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:4;2166:21;;;2161:2;2154:6;:9;:33;2146:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:17;2276:8;:6;:8::i;:::-;2256:28;;2294:9;2306:1;2294:13;;2317:11;2331:5;2317:19;;2405:15;2423:1;2405:19;;2434:13;2450:1;2434:17;;2496:14;2513:29;2524:12;2538:3;2513:10;:29::i;:::-;2496:46;;2569:1;2556:9;:14;;;:32;;;;2587:1;2574:9;:14;;;2556:32;2552:76;;;2613:4;2604:13;;2552:76;2688:863;2709:5;;;;;;;;;;;2695:19;;:10;:19;;;;:40;;;;;2730:5;;;;;;;;;;;2718:17;;:8;:17;;;;2695:40;2688:863;;;2751:9;2763:30;2774:12;2788:4;2763:10;:30::i;:::-;2751:42;;2811:6;2807:626;;;2863:4;2850:10;:17;2837:30;;2918:1;2889:13;:25;2903:10;2889:25;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;2885:115;;;2956:13;:25;2970:10;2956:25;;;;;;;;;;;;;;;;;;;;;;;;;2943:38;;2885:115;3034:3;3021:10;:16;;;3017:100;;;3094:3;3081:10;:16;3074:3;:24;3061:37;;3017:100;2807:626;;;3177:4;3166:8;:15;3155:26;;3230:1;3203:13;:23;3217:8;3203:23;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;3199:109;;;3266:13;:23;3280:8;3266:23;;;;;;;;;;;;;;;;;;;;;;;;;3255:34;;3199:109;3340:3;3329:8;:14;;;3325:94;;;3396:3;3385:8;:14;3378:3;:22;3367:33;;3325:94;2807:626;3451:39;3459:10;3471:4;3477:6;3485:4;3451:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3514:6;3513:7;3504:16;;3534:6;;;;;;;2688:863;;;;3578:5;;;;;;;;;;;3564:19;;:10;:19;;;3560:257;;;3623:6;3599:8;:20;3608:10;3599:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;3648:38;3656:10;3668:4;3678:6;3648:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:257;;;3741:6;3717:8;:20;3726:10;3717:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;3766:40;3774:10;3786:5;3798:6;3793:12;;3766:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:257;1957:1866;;;;;;;:::o;1599:137:4:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;814:77::-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;3918:164:1:-;3988:4;4016:3;4011:4;:8;;;;;;;;4004:15;;4073:1;4069;4063:4;4060:1;:7;4047:12;:20;;;;;;;;4041:29;;;;;;;;;;:33;4029:46;;3918:164;;;;:::o;4895:103::-;1018:9:4;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4955:36:1;4969:10;4981:9;4955:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;4895:103::o;4363:132::-;4415:30;4423:10;4435:9;4415:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:9;4455:8;:20;4464:10;4455:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;4363:132::o;1748:165::-;1811:30;1819:10;1831:9;1811:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:9;1851:8;:20;1860:10;1851:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;1894:12;1899:6;1894:4;:12::i;:::-;1748:165;:::o;1885:107:4:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;260:59:2:-;311:1;303:5;:9;;;;260:59;:::o;2093:225:4:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o",
  "source": "pragma solidity 0.5.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../SnakesAndLadders.sol\";\n\ncontract SnakesAndLaddersMock is SnakesAndLadders {\n    uint nonce = 0;\n\n    function setNonce(uint n) public {\n        nonce = n;\n    }\n\n    /**\n     * Returns a NOT a random number\n     */\n    function random() public view returns(uint256) {\n        return uint256(keccak256(abi.encodePacked(nonce)));\n    }\n}\n",
  "sourcePath": "/home/pere/Projects/eth-snakesandladders/contracts/mock/SnakesAndLaddersMock.sol",
  "ast": {
    "absolutePath": "/home/pere/Projects/eth-snakesandladders/contracts/mock/SnakesAndLaddersMock.sol",
    "exportedSymbols": {
      "SnakesAndLaddersMock": [
        680
      ]
    },
    "id": 681,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 646,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 814,
        "src": "24:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 648,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 925,
        "src": "84:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pere/Projects/eth-snakesandladders/contracts/SnakesAndLadders.sol",
        "file": "../SnakesAndLadders.sol",
        "id": 649,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 645,
        "src": "148:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 650,
              "name": "SnakesAndLadders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 644,
              "src": "216:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnakesAndLadders_$644",
                "typeString": "contract SnakesAndLadders"
              }
            },
            "id": 651,
            "nodeType": "InheritanceSpecifier",
            "src": "216:16:2"
          }
        ],
        "contractDependencies": [
          644,
          924
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 680,
        "linearizedBaseContracts": [
          680,
          644,
          924
        ],
        "name": "SnakesAndLaddersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 654,
            "name": "nonce",
            "nodeType": "VariableDeclaration",
            "scope": 680,
            "src": "239:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 652,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "239:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 653,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "293:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "303:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 660,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "311:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "303:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "303:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "278:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:8:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:2"
            },
            "scope": 680,
            "src": "260:59:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "425:67:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 673,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 654,
                                "src": "477:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "460:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "460:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "460:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 670,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "450:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "442:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 668,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "435:50:2"
                }
              ]
            },
            "documentation": "Returns a NOT a random number",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:2"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "416:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "415:9:2"
            },
            "scope": 680,
            "src": "378:114:2",
            "stateMutability": "view",
            "superFunction": 527,
            "visibility": "public"
          }
        ],
        "scope": 681,
        "src": "183:311:2"
      }
    ],
    "src": "0:495:2"
  },
  "legacyAST": {
    "absolutePath": "/home/pere/Projects/eth-snakesandladders/contracts/mock/SnakesAndLaddersMock.sol",
    "exportedSymbols": {
      "SnakesAndLaddersMock": [
        680
      ]
    },
    "id": 681,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 646,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 814,
        "src": "24:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 648,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 925,
        "src": "84:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pere/Projects/eth-snakesandladders/contracts/SnakesAndLadders.sol",
        "file": "../SnakesAndLadders.sol",
        "id": 649,
        "nodeType": "ImportDirective",
        "scope": 681,
        "sourceUnit": 645,
        "src": "148:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 650,
              "name": "SnakesAndLadders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 644,
              "src": "216:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnakesAndLadders_$644",
                "typeString": "contract SnakesAndLadders"
              }
            },
            "id": 651,
            "nodeType": "InheritanceSpecifier",
            "src": "216:16:2"
          }
        ],
        "contractDependencies": [
          644,
          924
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 680,
        "linearizedBaseContracts": [
          680,
          644,
          924
        ],
        "name": "SnakesAndLaddersMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 654,
            "name": "nonce",
            "nodeType": "VariableDeclaration",
            "scope": 680,
            "src": "239:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 652,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "239:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 653,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "293:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 659,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "303:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 660,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "311:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "303:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "303:9:2"
                }
              ]
            },
            "documentation": null,
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "278:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:8:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:0:2"
            },
            "scope": 680,
            "src": "260:59:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "425:67:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 673,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 654,
                                "src": "477:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "460:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "460:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "460:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 670,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "450:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "442:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint256"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 668,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "435:50:2"
                }
              ]
            },
            "documentation": "Returns a NOT a random number",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:2"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "416:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "415:9:2"
            },
            "scope": 680,
            "src": "378:114:2",
            "stateMutability": "view",
            "superFunction": 527,
            "visibility": "public"
          }
        ],
        "scope": 681,
        "src": "183:311:2"
      }
    ],
    "src": "0:495:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1570645404309": {
      "events": {},
      "links": {},
      "address": "0x2702526614b9636D41f4f0DD68F45959787C4868",
      "transactionHash": "0xa6b5053c43a3e9c3e68740350942ef2630cd78038c4588e018983bae2cd0762d"
    },
    "1570727718912": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1570806348733": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1570810537407": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1570813772065": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571332017942": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571825811092": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571826739289": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571925011696": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571939932279": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    },
    "1571940100349": {
      "events": {},
      "links": {},
      "address": "0xC2ebDc3Fa9C8B0D7CEB197D5e3Cd861A2dffD07a",
      "transactionHash": "0x46a04748fb50ed1299dcc8dcf49dc9f102581f55d6478b0250e3c4036d4ba34b"
    }
  },
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-10-24T18:01:46.220Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addAndPlay(uint256)": {
        "notice": "Adds balance and plays a game"
      },
      "addBalance()": {
        "notice": "Add to balance"
      },
      "addFunds()": {
        "notice": "Add funds to the contract by the owner"
      },
      "play(uint256)": {
        "notice": "Plays the game"
      },
      "random()": {
        "notice": "Returns a NOT a random number"
      },
      "randomDice(uint256,uint256)": {
        "notice": "Returns a random number from 1 to 6 based from a uint256 and turn"
      },
      "withdrawBalance()": {
        "notice": "Withdraw all balance"
      },
      "withdrawFunds(uint256)": {
        "notice": "Remove funds from the contract by the owner"
      }
    }
  }
}